package vn.edu.quanlynhatro.controller;

import vn.edu.quanlynhatro.model.BanQuanLy;
import vn.edu.quanlynhatro.model.Phong;
import vn.edu.quanlynhatro.model.SinhVien;
import vn.edu.quanlynhatro.service.BanQuanLyService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import java.util.List;
import java.util.Map;

@Controller
@RequestMapping("/banquanly")
public class BanQuanLyController {
    
    @Autowired
    private BanQuanLyService banQuanLyService;
    
    // üìÑ Danh s√°ch ban qu·∫£n l√Ω - http://localhost:8081/banquanly/list
    @GetMapping("/list")
    public String listBanQuanLy(Model model, 
                               @RequestParam(required = false) String search,
                               @RequestParam(required = false) String toa) {
        List<BanQuanLy> banQuanLys;
        
        if (search != null && !search.isEmpty()) {
            banQuanLys = banQuanLyService.searchBanQuanLy(search);
        } else if (toa != null && !toa.isEmpty()) {
            banQuanLys = banQuanLyService.getNhanVienTheoToa(toa);
        } else {
            banQuanLys = banQuanLyService.getAllBanQuanLy();
        }
        
        model.addAttribute("banQuanLys", banQuanLys);
        model.addAttribute("search", search);
        model.addAttribute("toa", toa);
        model.addAttribute("thongKe", banQuanLyService.getThongKeTongQuanText());
        
        return "banquanly/list";
    }
    
    // üëÄ Xem chi ti·∫øt ban qu·∫£n l√Ω - http://localhost:8081/banquanly/detail/{id}
    @GetMapping("/detail/{id}")
    public String chiTietBanQuanLy(@PathVariable Long id, Model model) {
        BanQuanLy banQuanLy = banQuanLyService.getBanQuanLyById(id)
            .orElseThrow(() -> new RuntimeException("Kh√¥ng t√¨m th·∫•y ban qu·∫£n l√Ω"));
        
        // L·∫•y th·ªëng k√™
        Map<String, Object> thongKe = banQuanLyService.getThongKeNhanVien(id);
        List<Phong> phongQuanLy = banQuanLyService.getPhongQuanLyByNhanVien(id);
        List<SinhVien> sinhVienQuanLy = banQuanLyService.getSinhVienQuanLyByNhanVien(id);
        
        model.addAttribute("banQuanLy", banQuanLy);
        model.addAttribute("thongKe", thongKe);
        model.addAttribute("phongQuanLy", phongQuanLy);
        model.addAttribute("sinhVienQuanLy", sinhVienQuanLy);
        

        model.addAttribute("totalPhong", phongQuanLy.size());
        model.addAttribute("totalSinhVien", sinhVienQuanLy.size());
        return "banquanly/detail";
    }
    
    // ‚ûï Form th√™m ban qu·∫£n l√Ω - http://localhost:8081/banquanly/add
    @GetMapping("/add")
    public String showThemBanQuanLyForm(Model model) {
        model.addAttribute("banQuanLy", new BanQuanLy());
        model.addAttribute("danhSachToa", List.of("T√≤a A", "T√≤a B", "T√≤a C", "T·∫•t c·∫£"));
        return "banquanly/add";
    }
    
    // üíæ L∆∞u ban qu·∫£n l√Ω m·ªõi - http://localhost:8081/banquanly/add
    @PostMapping("/add")
    public String themBanQuanLy(@ModelAttribute("banQuanLy") BanQuanLy banQuanLy,
                                Model model,
                                RedirectAttributes redirectAttributes) {
        try {
            banQuanLyService.createBanQuanLy(banQuanLy);
            redirectAttributes.addFlashAttribute("success",
                    "Th√™m ban qu·∫£n l√Ω " + banQuanLy.getHoTen() + " th√†nh c√¥ng!");
            return "redirect:/banquanly/list"; // ‚úÖ ch·ªâ redirect khi th√™m th√†nh c√¥ng
        } catch (RuntimeException e) {
            // ‚ùå Khi b·ªã tr√πng, gi·ªØ nguy√™n form v√† b√°o l·ªói
            model.addAttribute("error", e.getMessage());
            model.addAttribute("danhSachToa", List.of("T√≤a A", "T√≤a B", "T√≤a C", "T·∫•t c·∫£"));
            return "banquanly/add";
        }
    }

    
    // ‚úèÔ∏è Form s·ª≠a ban qu·∫£n l√Ω - http://localhost:8081/banquanly/edit/{id}
    @GetMapping("/edit/{id}")
    public String showSuaBanQuanLyForm(@PathVariable Long id, Model model) {
        BanQuanLy banQuanLy = banQuanLyService.getBanQuanLyById(id)
            .orElseThrow(() -> new RuntimeException("Kh√¥ng t√¨m th·∫•y ban qu·∫£n l√Ω"));
        
        model.addAttribute("banQuanLy", banQuanLy);
        model.addAttribute("danhSachToa", List.of("T√≤a A", "T√≤a B", "T√≤a C", "T·∫•t c·∫£"));
        return "banquanly/edit";
    }
    
    // üíæ C·∫≠p nh·∫≠t ban qu·∫£n l√Ω - http://localhost:8081/banquanly/edit/{id}
    @PostMapping("/edit/{id}")
    public String suaBanQuanLy(@PathVariable Long id, 
                              @ModelAttribute BanQuanLy banQuanLy, 
                              RedirectAttributes redirectAttributes) {
        try {
            BanQuanLy updated = banQuanLyService.updateBanQuanLy(id, banQuanLy);
            redirectAttributes.addFlashAttribute("success", 
                "C·∫≠p nh·∫≠t ban qu·∫£n l√Ω " + updated.getHoTen() + " th√†nh c√¥ng!");
        } catch (Exception e) {
            redirectAttributes.addFlashAttribute("error", "L·ªói: " + e.getMessage());
        }
        return "redirect:/banquanly/list";
    }
    
    // üóëÔ∏è X√≥a ban qu·∫£n l√Ω - http://localhost:8081/banquanly/delete/{id}
    @PostMapping("/delete/{id}")
    public String xoaBanQuanLy(@PathVariable Long id, 
                              RedirectAttributes redirectAttributes) {
        try {
            BanQuanLy banQuanLy = banQuanLyService.getBanQuanLyById(id)
                .orElseThrow(() -> new RuntimeException("Kh√¥ng t√¨m th·∫•y ban qu·∫£n l√Ω"));
            
            banQuanLyService.deleteBanQuanLy(id);
            redirectAttributes.addFlashAttribute("success", 
                "X√≥a ban qu·∫£n l√Ω " + banQuanLy.getHoTen() + " th√†nh c√¥ng!");
        } catch (Exception e) {
            redirectAttributes.addFlashAttribute("error", "L·ªói: " + e.getMessage());
        }
        return "redirect:/banquanly/list";
    }
}